[[cat-indices]]
== cat indices

`indices` 命令提供了每个索引的片段。该信息 *跨越节点*。例如：

[source,js]
--------------------------------------------------
GET /_cat/indices/twi*?v&s=index
--------------------------------------------------
// CONSOLE
// TEST[setup:huge_twitter]
// TEST[s/^/PUT twitter2\n{"settings": {"number_of_replicas": 0}}\n/]

可能响应：

[source,txt]
--------------------------------------------------
health status index    uuid                   pri rep docs.count docs.deleted store.size pri.store.size
yellow open   twitter  u8FNjxh8Rfy_awN11oDKYQ   1   1       1200            0     88.1kb         88.1kb
green  open   twitter2 nYFWZEO7TUiOjLQXBaYJpA   5   0          0            0       260b           260b
--------------------------------------------------
// TESTRESPONSE[s/\d+(\.\d+)?[tgmk]?b/\\d+(\\.\\d+)?[tgmk]?b/]
// TESTRESPONSE[s/u8FNjxh8Rfy_awN11oDKYQ|nYFWZEO7TUiOjLQXBaYJpA/.+/ _cat]

我们可以快速指定有多少分片构成索引，文档数量，删除文档数量，主分片存储空间，总存储空间（包括副本的所有分片）。
所有这些暴露的指标都直接来自 Lucene APIs 。

*Notes:*

1. 由于此处显示的文档和已删除文档的数量均为 lucene 级别，因此它还包含所有隐藏文档（例如嵌套文档）。

2. 要在 Elasticsearch 级别获得实际的文档数量，推荐的方法是使用 <<cat-count>> 或者 <<search-count>>

[float]
[[pri-flag]]
=== Primaries

默认情况下，索引统计信息会显示所有索引的分片，包括副本。
提供 `pri` 参数可以在仅有主分片下启用相关统计信息的视图。

[float]
[[examples]]
=== Examples

哪些索引状态是 yellow ？

[source,js]
--------------------------------------------------
GET /_cat/indices?v&health=yellow
--------------------------------------------------
// CONSOLE
// TEST[continued]

结果如下：

[source,txt]
--------------------------------------------------
health status index    uuid                   pri rep docs.count docs.deleted store.size pri.store.size
yellow open   twitter  u8FNjxh8Rfy_awN11oDKYQ   1   1       1200            0     88.1kb         88.1kb
--------------------------------------------------
// TESTRESPONSE[s/\d+(\.\d+)?[tgmk]?b/\\d+(\\.\\d+)?[tgmk]?b/]
// TESTRESPONSE[s/u8FNjxh8Rfy_awN11oDKYQ/.+/ _cat]

哪个索引拥有最多的文档？

[source,js]
--------------------------------------------------
GET /_cat/indices?v&s=docs.count:desc
--------------------------------------------------
// CONSOLE
// TEST[continued]

结果如下：

[source,txt]
--------------------------------------------------
health status index    uuid                   pri rep docs.count docs.deleted store.size pri.store.size
yellow open   twitter  u8FNjxh8Rfy_awN11oDKYQ   1   1       1200            0     88.1kb         88.1kb
green  open   twitter2 nYFWZEO7TUiOjLQXBaYJpA   5   0          0            0       260b           260b
--------------------------------------------------
// TESTRESPONSE[s/\d+(\.\d+)?[tgmk]?b/\\d+(\\.\\d+)?[tgmk]?b/]
// TESTRESPONSE[s/u8FNjxh8Rfy_awN11oDKYQ|nYFWZEO7TUiOjLQXBaYJpA/.+/ _cat]

有多少 `twitter` 索引的分片完成了合并操作？

[source,js]
--------------------------------------------------
GET /_cat/indices/twitter?pri&v&h=health,index,pri,rep,docs.count,mt
--------------------------------------------------
// CONSOLE
// TEST[continued]

结果如下：

[source,txt]
--------------------------------------------------
health index   pri rep docs.count mt pri.mt
yellow twitter   1   1 1200       16     16
--------------------------------------------------
// TESTRESPONSE[s/16/\\d+/ _cat]

每个索引使用多少内存？

[source,js]
--------------------------------------------------
GET /_cat/indices?v&h=i,tm&s=tm:desc
--------------------------------------------------
// CONSOLE
// TEST[continued]

结果如下：

[source,txt]
--------------------------------------------------
i         tm
twitter   8.1gb
twitter2  30.5kb
--------------------------------------------------
// TESTRESPONSE[s/\d+(\.\d+)?[tgmk]?b/\\d+(\\.\\d+)?[tgmk]?b/]
// TESTRESPONSE[_cat]
