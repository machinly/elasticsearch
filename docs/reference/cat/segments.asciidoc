[[cat-segments]]
== cat segments

`segments` 命令提供有关索引分片中 segments 的底层信息。
它提供了与链接类似的信息： link:indices-segments.html[_segments] 。例如：

[source,js]
--------------------------------------------------
GET /_cat/segments?v
--------------------------------------------------
// CONSOLE
// TEST[s/^/PUT \/test\/test\/1?refresh\n{"test":"test"}\nPUT \/test1\/test\/1?refresh\n{"test":"test"}\n/]

结果如下：

["source","txt",subs="attributes,callouts"]
--------------------------------------------------
index shard prirep ip        segment generation docs.count docs.deleted size size.memory committed searchable version compound
test  3     p      127.0.0.1 _0               0          1            0  3kb        2042 false     true       {lucene_version}   true
test1 3     p      127.0.0.1 _0               0          1            0  3kb        2042 false     true       {lucene_version}   true
--------------------------------------------------
// TESTRESPONSE[s/3kb/\\d+(\\.\\d+)?[mk]?b/ s/2042/\\d+/ _cat]

在前两列的输出信息中展示了索引名和分片数量。

如果你只想获取某个特定索引的 segments 信息，可以在 URL 中添加索引名称，例如 `/_cat/segments/test` 。
也可以查询多个索引如 `/_cat/segments/test,test1` 。


以下各列提供了其他监控信息：

prirep::        此 segment 是属于主分片还是副本分片。

ip::            segment 所在分片的 IP 地址。

segment::       segment 名称，从 segment 生成时创建。该名称在内部用于在该 segment 所属分片的目录中生成文件名。

generation::    generation number 随着写入的每个 segment 递增。 segment 的名称来源于 generation number 。

docs.count::    此 segment 中存储的未删除文档的数量。请注意，这些是 Lucene 文档，因此计数将包含隐藏文档（例如嵌套类型）。

docs.deleted::  存储在此分段中的已删除文档的数量。如果这个数字大于0，当这个 segment 被合并时，空间将被回收。

size::          此 segment 使用的磁盘空间量。

size.memory::   Segments 将一些数据存储到内存中以便高效搜索。此列显示使用的内存中的字节数。

committed::     segment 是否已在磁盘上同步。 segment 提交后将在硬重启后仍然存在。如果发生错误，无需担心，未提交的 segment 也会存储在事务日志中，以便 Elasticsearch 能够在下次启动时回放更改。

searchable::    为 true 时 segment 可被检索。为 false 时，意味着很可能该 segment 已写入磁盘，但未发生刷新使其可搜索。

version::       用于写入此 segment 的 Lucene 版本。

compound::      segment 是否存储在 compound 文件中。如果为 true ，这意味着在 compound 文件中保存 Lucene 合并 segment 中所有的文件描述符。
